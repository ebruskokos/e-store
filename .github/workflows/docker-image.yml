name: ci

on:
  push:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Check out the code
        uses: actions/checkout@v3   # This step checks out your repository

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: "ebruskokos"       # Hardcoded username
          password: "dckr_pat_zZazXM6Z6BIEaQTO9VS-6Y4zxP8"  # Hardcoded token

      -
        name: Determine version using Semantic Versioning
        id: get_version
        run: |
          git fetch --tags
          # Get the latest tag if any
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "1.0.0")
          
          # Extract the components of the latest tag
          major=$(echo $latest_tag | cut -d '.' -f1)
          minor=$(echo $latest_tag | cut -d '.' -f2)
          patch=$(echo $latest_tag | cut -d '.' -f3)

          # Increment the PATCH version by default
          patch=$((patch + 1))

          # Determine if this is a minor or major change by checking commit messages
          commit_message=$(git log -1 --pretty=%B)
          if [[ "$commit_message" == *"#major"* ]]; then
            major=$((major + 1))
            minor=0
            patch=0
          elif [[ "$commit_message" == *"#minor"* ]]; then
            minor=$((minor + 1))
            patch=0
          fi

          new_version="$major.$minor.$patch"
          echo "new_version=$new_version" >> $GITHUB_ENV
          echo "The new version is: $new_version"

      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ebruskokos/e-store:${{ env.new_version }}   # Version tag
            ebruskokos/e-store:latest                   # Latest tag
